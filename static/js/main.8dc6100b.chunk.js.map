{"version":3,"sources":["logo.svg","Control.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TimerLengthControl","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","id","props","titleID","title","minID","onClick","lengthID","length","addID","Component","App","_this","call","state","brkLength","seshLength","timerState","timerType","timer","intervalID","alarmColor","color","setBrkLength","bind","assertThisInitialized","setSeshLength","lengthControl","timerControl","beginCountDown","decrementTimer","phaseControl","warning","buzzer","switchTimer","clockify","reset","e","currentTarget","stateToChange","sign","currentLength","_this$setState3","setState","defineProperty","_this$setState4","console","log","clearInterval","setInterval","accurateInterval","_timer","audioBeep","play","num","str","minutes","Math","floor","seconds","pause","currentTime","_this2","Control_TimerLengthControl","style","target","href","preload","src","ref","audio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dc6100b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-undef */\n\nimport React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\n\nexport class TimerLengthControl extends Component {\nrender() {\n  return (\n    <div className=\"length-control\">\n      <div id={this.props.titleID}>\n        {this.props.title}\n      </div>\n      <button id={this.props.minID}\n        className=\"btn-level\" value=\"-\"\n        onClick={this.props.onClick}>\n        <i className=\"fa fa-arrow-down fa-2x\"/>\n      </button>\n      <div id={this.props.lengthID} className=\"btn-level\">\n        {this.props.length}\n      </div>\n      <button id={this.props.addID}\n        className=\"btn-level\" value=\"+\"\n        onClick={this.props.onClick}>\n        <i className=\"fa fa-arrow-up fa-2x\"/>\n      </button>\n    </div>\n  )\n}\n};\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-undef */\n\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { TimerLengthControl } from './Control.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brkLength: 5,\n      seshLength: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: {color: 'white'}\n    }\n    this.setBrkLength = this.setBrkLength.bind(this);\n    this.setSeshLength = this.setSeshLength.bind(this);\n    this.lengthControl = this.lengthControl.bind(this);\n    this.timerControl = this.timerControl.bind(this);\n    this.beginCountDown = this.beginCountDown.bind(this);\n    this.decrementTimer = this.decrementTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n    this.warning = this.warning.bind(this);\n    this.buzzer = this.buzzer.bind(this);\n    this.switchTimer = this.switchTimer.bind(this);\n    this.clockify = this.clockify.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setBrkLength(e) {\n    this.lengthControl('brkLength', e.currentTarget.value,\n    this.state.brkLength, 'Session');\n  }\n  setSeshLength(e) {\n    this.lengthControl('seshLength', e.currentTarget.value,\n    this.state.seshLength, 'Break');\n  }\n  lengthControl(stateToChange, sign, currentLength, timerType) {\n    if (this.state.timerState == 'running') return;\n    if (this.state.timerType == timerType) {\n      if (sign == \"-\" && currentLength != 1 ) {\n        this.setState({[stateToChange]: currentLength - 1});\n      } else if (sign == \"+\" && currentLength != 60) {\n        this.setState({[stateToChange]: currentLength + 1});\n      }\n    } else {\n      if (sign == \"-\" && currentLength != 1 ) {\n        this.setState({[stateToChange]: currentLength - 1,\n        timer: currentLength * 60 - 60});\n      } else if (sign == \"+\" && currentLength != 60) {\n        this.setState({[stateToChange]: currentLength + 1,\n        timer: currentLength * 60 + 60});\n      }\n    }\n  }\n  timerControl() {\n    console.log('this.state.intervalID: ' + this.state.intervalID);\n    let control = this.state.timerState === 'stopped' ? (\n      this.beginCountDown(),\n      this.setState({timerState: 'running'})\n    ) : (\n      this.state.intervalID && clearInterval(this.state.intervalID),\n      this.setState({timerState: 'stopped'})\n    );\n  }\n  accurateInterval() {\n    this.decrementTimer();\n    this.phaseControl();\n  }\n  beginCountDown() {\n    this.setState({\n      intervalID: setInterval(this.accurateInterval.bind(this), 1000)\n    })\n  }\n  decrementTimer() {\n    this.setState({timer: this.state.timer - 1});\n  }\n  phaseControl() {\n    let timer = this.state.timer;\n    this.warning(timer);\n    this.buzzer(timer);\n    if (timer < 0) {\n      this.state.timerType === 'Session' ? (\n        this.state.intervalID && clearInterval(this.state.intervalID),\n        this.beginCountDown(),\n        this.switchTimer(this.state.brkLength * 60, 'Break')\n      ) : (\n        this.state.intervalID && clearInterval(this.state.intervalID),\n        this.beginCountDown(),\n        this.switchTimer(this.state.seshLength * 60, 'Session')\n      );\n    }\n  }\n  warning(_timer) {\n    let warn = _timer < 61 ?\n    this.setState({alarmColor: {color: '#a50d0d'}}) :\n    this.setState({alarmColor: {color: 'white'}});\n  }\n  buzzer(_timer) {\n    if (_timer === 0) {\n      this.audioBeep.play();\n    }\n  }\n  switchTimer(num, str) {\n    this.setState({\n      timer: num,\n      timerType: str,\n      alarmColor: {color: 'white'}\n    })\n  }\n  clockify() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return minutes + ':' + seconds;\n  }\n  reset() {\n    this.setState({\n      brkLength: 5,\n      seshLength: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: {color: 'white'}\n    });\n    this.state.intervalID && clearInterval(this.state.intervalID);\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"main-title\">\n          Pomodoro Clock\n        </div>\n        <TimerLengthControl\n          titleID=\"break-label\"   minID=\"break-decrement\"\n          addID=\"break-increment\" lengthID=\"break-length\"\n          title=\"Break Length\"    onClick={this.setBrkLength}\n          length={this.state.brkLength}/>\n        <TimerLengthControl\n          titleID=\"session-label\"   minID=\"session-decrement\"\n          addID=\"session-increment\" lengthID=\"session-length\"\n          title=\"Session Length\"    onClick={this.setSeshLength}\n          length={this.state.seshLength}/>\n        <div className=\"timer\" style={this.state.alarmColor}>\n          <div className=\"timer-wrapper\">\n            <div id='timer-label'>\n              {this.state.timerType}\n            </div>\n            <div id='time-left'>\n              {this.clockify()}\n            </div>\n          </div>\n        </div>\n        <div className=\"timer-control\">\n          <button id=\"start_stop\" onClick={this.timerControl}>\n            <i className=\"fa fa-play fa-2x\"/>\n            <i className=\"fa fa-pause fa-2x\"/>\n          </button>\n          <button id=\"reset\" onClick={this.reset}>\n            <i className=\"fas fa-redo fa-2x\"></i>\n          </button>\n        </div>\n        <div className=\"author\"> Designed and Coded by <br />\n          <a target=\"_blank\" href=\"https://goo.gl/6NNLMG\">\n            Peter Weinberg\n          </a>\n        </div>\n        <audio id=\"beep\" preload=\"auto\"\n          src=\"https://goo.gl/65cBl1\"\n          ref={(audio) => { this.audioBeep = audio; }} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}